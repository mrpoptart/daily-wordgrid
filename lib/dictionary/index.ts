/*
 Node-only lazy dictionary loader.
 Exposes isWord(word) that resolves to boolean after lazy-loading
 SOWPODS set from JSON generated by scripts/build-sowpods.ts.

 This module intentionally avoids shipping the large dataset to the browser.
*/

import { createRequire } from "node:module";
import { fileURLToPath } from "node:url";
import { dirname, join } from "node:path";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

let dictionary: Set<string> | null = null;

async function loadDictionary(): Promise<Set<string>> {
  if (dictionary) return dictionary;

  // Using createRequire to load JSON in ESM reliably in Node context
  const require = createRequire(import.meta.url);
  const dataPath = join(__dirname, "sowpods.set.json");
  const words: string[] = require(dataPath);
  dictionary = new Set(words);
  return dictionary;
}

export async function isWord(word: string): Promise<boolean> {
  if (typeof word !== "string") return false;
  const normalized = word.trim().toUpperCase();
  if (!normalized) return false;
  const dict = await loadDictionary();
  return dict.has(normalized);
}

export type { };
